image:  alpine:latest   # 使用最新的 Alpine 镜像

stages:
  - before
  - build
  - notify

test_job: 
  stage: build
  script:
    - echo "运行测试..."
    - exit 1  # 模拟测试失败（可删除）

notify_job:
  stage: notify
  tags:
    - mail
  before_script:
    - apk add --no-cache msmtp  # 安装 msmtp
    - echo "account default" > /etc/msmtprc  # 创建 msmtp 配置文件
    - echo "host smtp.qq.com" >> /etc/msmtprc  # Gmail SMTP 服务器
    - echo "port 587" >> /etc/msmtprc  # 使用 TLS
    - echo "auth on" >> /etc/msmtprc
    - echo "user $QQ_MAIL" >> /etc/msmtprc  # 替换为您的 Gmail 地址
    - echo "password $QQ_MAIL_PASSWORD" >> /etc/msmtprc  # 替换为您的应用密码
    - echo "from $QQ_MAIL" >> /etc/msmtprc  # 替换为您的 Gmail 地址
    - echo "logfile /var/log/msmtp.log" >> /etc/msmtprc  # 日志文件
    - echo "tls on" >> /etc/msmtprc  # 启用 TLS
    - echo "tls_trust_file /etc/ssl/certs/ca-certificates.crt" >> /etc/msmtprc  # 指定 CA 证书
    - chmod 600 /etc/msmtprc  # 设置权限
  script:
    - |
      jobs="test_job"
      failed_jobs=""
      if [ "$CI_PIPELINE_STATUS" != "success" ]; then
        echo "Pipeline failed. Checking jobs for failures..."
        
        for job in $jobs; do
          job_status="${job}_status"  # 获取作业状态的变量名
          echo job_status
          eval job_status_value=\$$job_status  # 使用 eval 获取作业状态值
          
          if [ "$job_status_value" != "success" ]; then
            failed_jobs="$failed_jobs$job, "  # 添加到失败作业列表
          fi
        done

        # Prepare failure message
        if [ -n "$failed_jobs" ]; then
          # Remove trailing comma and space
          failed_jobs_list=${failed_jobs%,*}
          echo -e "Subject: CI/CD Pipeline Failure Notification\n\nThe following jobs have failed: $failed_jobs_list. Please check the logs for
            details." | msmtp -a default  $GMAIL # 替换为收件人邮箱
        fi
      else
        echo -e "Subject: CI/CD Pipeline Success Notification\n\nThe pipeline has succeeded." | msmtp -a default  $GMAIL # 替换为收件人邮箱
      fi
  when: always
    #- echo "GitLab CI 通知： 测试任务已完成" | msmtp -a default  $GMAIL # 替换为收件人邮箱